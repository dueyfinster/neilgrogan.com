<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>review book on Neil Grogan</title><link>/tags/review-book/</link><description>Recent content in review book on Neil Grogan</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 01 Mar 2016 00:00:00 +0000</lastBuildDate><atom:link href="/tags/review-book/feed.xml" rel="self" type="application/rss+xml"/><item><title>Maintainable Software Book</title><link>/maintain-soft-book/</link><pubDate>Tue, 01 Mar 2016 00:00:00 +0000</pubDate><guid>/maintain-soft-book/</guid><description>I recently read O&amp;rsquo;Reilly Building Maintainable Software (Java Edition). It provides good insight as to what to look for to create maintainability in enterpise software systems.
10 suggestions the book provides: Write shorter units Write simpler units (measured in Cyclomatic Complexity) Write code once only Keep interfaces very small Seperate code in to modules Couple modules loosely Keep modules evenly sized Keep codebase small (and look for ways to right-size) Automate development pipeline and your tests Write clean code and refactor as you go Overall I thought the book was very well laid out, easy to read and easy to understand.</description></item><item><title>Review of Steve Jobs Biography</title><link>/review-of-steve-jobs-biography/</link><pubDate>Mon, 13 Aug 2012 00:00:00 +0000</pubDate><guid>/review-of-steve-jobs-biography/</guid><description>I recently finished reading Steve Jobs, the biography by Walter Isaacson. I can&amp;rsquo;t add much more then the extensive coverage that it has recieved in the press to date. Instead I paraphrase really badly a friend of mine, Noel Hudson:
All that book thought me was dropping acid and treating people really badly works as a life strategy.
While that&amp;rsquo;s not entirely true it is a humourous look at the books tone.</description></item></channel></rss>