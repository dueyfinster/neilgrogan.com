<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>python on Neil Grogan</title><link>/tags/python/</link><description>Recent content in python on Neil Grogan</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 14 Jan 2018 00:00:00 +0000</lastBuildDate><atom:link href="/tags/python/feed.xml" rel="self" type="application/rss+xml"/><item><title>Python 3 In-Memory Zip File</title><link>/py-bin-zip/</link><pubDate>Sun, 14 Jan 2018 00:00:00 +0000</pubDate><guid>/py-bin-zip/</guid><description>In Python, BytesIO is the way to store binary data in memory. Most examples you’ll see using zip files in memory is to store string data and indeed the most common example you’ll find online from the zipfile module is zipfile.writestr(file_name, &amp;#34;Text Data&amp;#34;). But what if you want to store binary data of a PDF or Excel Spreadsheet that’s also in memory? You could use zipfile.write() (designed to take binary data) but then you can’t specify a filename (since our in-memory file was never written to a location on disk).</description></item></channel></rss>