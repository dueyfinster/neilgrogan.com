<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bash on Neil Grogan</title>
    <link>/tags/bash/</link>
    <description>Recent content in Bash on Neil Grogan</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 10 May 2013 00:00:00 +0000</lastBuildDate>
    <atom:link href="/tags/bash/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Custom Colourful Bash Prompt</title>
      <link>/colour-bash/</link>
      <pubDate>Fri, 10 May 2013 00:00:00 +0000</pubDate>
      <guid>/colour-bash/</guid>
      <description>&lt;p&gt;Bash, a command line shell is one of the most used pieces of software in my&#xA;daily work. I like scripting repetitive actions to save a lot time (it brings me&#xA;great joy!). One of the simplest and easiest customisations is to add a bit of&#xA;colour to your otherwise boring bash prompt (otherwise known as $PS1):&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;[ngrogan@localhost:~]$&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;can be turned in to this:&lt;/p&gt;&#xA;&lt;img src=&#34;../../files/2013/05/ColourBashPrompt.png&#34; alt=&#34;My Custom Colour Bash Prompt&#34;&gt;&#xA;&lt;p&gt;The thing about Bash is the colour codes to achieve this can look archaic:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Output Percentage of File (Bash code)</title>
      <link>/output-percentage-of-file-bash-code/</link>
      <pubDate>Sat, 05 Feb 2011 00:00:00 +0000</pubDate>
      <guid>/output-percentage-of-file-bash-code/</guid>
      <description>&lt;p&gt;I wrote this script recently for a friend in a job who needed to output a&#xA;certain percentage of a log file, but no more and no less. This was in Linux&#xA;using bash, so I had a go at writing a solution, which you see below. Posting&#xA;this up in case it&amp;rsquo;s useful to anyone else!&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# !/bin/sh # Public Domain, by Neil Grogan 2010 # Script&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;to output last 30% of file by lines&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    OLDFILE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;amp;quot;oldlog.txt&amp;amp;quot;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    NEWFILE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;newlog.txt&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    PERCENT&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;0.7&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;#Use wc to count lines&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    LINES&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;wc -l $OLDFILE | awk &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;{ print $1}&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;#Linespercent = 2 decimal places, lines by percent, round to whole&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    LINESPERCENT&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;scale=2; &lt;/span&gt;$LINES&lt;span style=&#34;color:#e6db74&#34;&gt;*&lt;/span&gt;$PERCENT&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; | bc | xargs printf &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%1.0f&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Use tail to get last 30% and output, can use tail -s with sleep time to have it run on sched.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    tail -n $LINESPERCENT $OLDFILE &amp;gt;&amp;gt; $NEWFILE&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
  </channel>
</rss>
